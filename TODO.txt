* cpp-tlist tasks
** TODO [LIST] add operator=
** TODO [LIST] replace new with unique_ptr
** TODO [LIST] Use list_clear() in the ~linked_list dtor
** TODO [LIST] add remove(const value& T) 
** TODO [LIST] add remove_if (Predicate pred)
** TODO [LIST] add list_swap
** TODO [LIST] list_delete(element)? is this valid?
** TODO [LIST] iterator suppport list.begin(), list.end()
** TODO [LIST] list.sort() to be implemented
** TODO [LIST] Print function should default to std::cout (std::ostream& stream = std::cout) const
** TODO [LIST] Use pre-increment rather than post increment
** TODO [LIST] list_empty -> empty (STL)?
** TODO [LIST] list_get_position needs to check for nullptr after the list traversal
** TODO [LIST] list_add_at_front - should this throw an exception on memory failure?
* APIS
** DONE linked_list, linked_list(n), linked_list(n,value)
** DONE ~linked_list
** DONE list_assign
** DONE list_back
** TODO list_begin
** TODO list_cbegin
** TODO list_cend
** DONE list_clear
** TODO list_crbegin
** DONE list_add (emplace)
** DONE list_add_front  (emplace)
** DONE list_add_back   (emplace)
** DONE list_add_position
** DONE list_empty
** TODO list_end
** DONE list_erase
** DONE list_get_front
** TODO list_get_allocator
** DONE list_insert (See add)
** TODO list_max_size
** TODO list_merge
** TODO operator=
** DONE list_pop_back
** DONE list_pop_front
** DONE list_push_back
** DONE list_push_front
** TODO list_rbegin
** DONE list_remove
** TODO list_remove_if
** TODO list_rend
** TODO list_resize
** DONE list_reverse
** DONE list_size
** TODO list_sort
** TODO list_swap
** TODO list_splice
** TODO list_unique
* Issues
** DONE [BUG] list_add_back with an empty list causes seg fault
** TODO [BUG] gtest has seg fault issue on one of the remove tests
** TODO [BUG] test_del has failing test when list_delete_element(1) is used, the position-1 means its the head!
** TODO [BUG] list_remove(value), if value is end of list,pTail is no updated. gtest fails as well.
* Completed
** DONE [LIST] Add list_remove element with specific value
** DONE [LIST] Add list_remove(value)
** DONE [LIST] Add list_clear to remove all list entries
** DONE [LIST] use pop_front() as the list_clear() operation
** DONE [LIST] add assign(size_t, const value& T)
** DONE [LIST] add pop_back and pop_front which delete the elements
** DONE [LIST] add new constructor with size only
** DONE [LIST] add stack example
** DONE [PROJ] Convert to Templates
** DONE [LIST] add list_add(size, value) to constructor
** DONE [TEST] test harness as library
** DONE [LIST] Add list_search() returns element number
** DONE [LIST] Add list_reverse
** DONE [LIST] list_delete_back()
** DONE [LIST] list_delete_front()
** DONE [LIST] Add copy constructor
** DONE [LIST] list.isEmpty() from STL
** DONE [LIST] list.size()
** DONE [LIST] list_add_to_back()
** DONE [LIST] list.emplace(position, value)
** DONE [LIST] list_dump - why does it need the pHead? Its already private?
** DONE [LIST] list_get_back() returns the last list value
** DONE [LIST] list.get_front() returns the first list value
** DONE [LIST] Use nullptr (C++11?)
** DONE [LIST] Add exception throw to the deletion operations
** DONE [LIST] list.delete(position)
** DONE [TEST] harness to be split, add exception handling.
** DONE [LIST] list_get_front - throw exception for empty list
** DONE [LIST] list_get_front - use empty method to determine list status
** DONE [BUG] gtest has 3 failures on deletion tests -> FIXED
** DONE [BUG] Elements at position starting at 0 vs 1?
** DONE [BUG] test_back: Tail looks incorrect for test2 -> FIXED, wrong call in test harness (cut and paste error)
